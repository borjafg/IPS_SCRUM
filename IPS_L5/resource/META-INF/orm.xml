<?xml version="1.0" encoding="UTF-8"?>
<entity-mappings xmlns="http://java.sun.com/xml/ns/persistence/orm"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/persistence/orm http://java.sun.com/xml/ns/persistence/orm_2_0.xsd"
	version="2.0">


	<!-- - - - - - - - - - - - - - - - - - - - - - - - -->
	<!-- - - - - - - - - - - Pedido - - - - - - - - - - -->
	<!-- - - - - - - - - - - - - - - - - - - - - - - - -->

	<named-query name="Pedido.findAll">
		<query>select p from Pedido p</query>
	</named-query>


	<named-query name="Pedido.findPosibleRecoger">
		<query>select p   from Pedido p   where (p.pagado = model.types.PedidoPagado.SI and p.estado = model.types.EstadoPedido.POSIBLE_ASOCIAR_OT)   order by p.fecha ASC</query>
	</named-query>


	<named-query name="Pedido.findPosibleRecoger_NoPedido">
		<query>select p   from Pedido p   where (p != :pedido and p.pagado = model.types.PedidoPagado.SI and p.estado = model.types.EstadoPedido.POSIBLE_ASOCIAR_OT)   order by p.fecha ASC</query>
	</named-query>





	<named-query name="Pedido.findPosibleEmpaquetar">
		<query>select distinct p.productoPedido.pedido from ProductoEnOrdenTrabajo p where p.ordenTrabajo = :ordenTrabajo and p.unidadesProducto > p.unidadesEmpaquetadas</query>
	</named-query>


	<named-query name="Pedido.findNumProductosPosibleEmpaquetar">
		<query>select sum(p.unidadesProducto - p.unidadesEmpaquetadas) from ProductoEnOrdenTrabajo p where p.ordenTrabajo = :ordenTrabajo and p.productoPedido.pedido = :pedido and p.unidadesProducto > p.unidadesEmpaquetadas</query>
	</named-query>


	<named-query name="Pedido.findPeso_Volumen">
		<query>select sum(p.producto.peso * p.cantidad), sum(p.producto.volumen * p.cantidad) from ProductoEnPedido p where p.pedido = :pedido</query>
	</named-query>


	<named-query name="Pedido.findNoPagados">
		<query>select p from Pedido p where p.pagado = model.types.PedidoPagado.NO</query>
	</named-query>

	<named-query name="Pedido.findNumPedidoDia_TipoCliente">
		<query>select distinct YEAR(o.fecha), MONTH(o.fecha), DAY(o.fecha), count(*) as num    from Pedido o    where o.fecha is not null and o.cliente.tipoCliente = :tipoCliente    Group by YEAR(o.fecha), MONTH(o.fecha), DAY(o.fecha)    Order by YEAR(o.fecha) ASC, MONTH(o.fecha) ASC, DAY(o.fecha) ASC</query>
	</named-query>
	
	
	<named-query name="Pedido.findNumPedidoDia_MetodoPago">
		<query>select distinct YEAR(o.fecha), MONTH(o.fecha), DAY(o.fecha), count(*) as num    from Pedido o    where o.fecha is not null and o.metodoPago = :metodoPago    Group by YEAR(o.fecha), MONTH(o.fecha), DAY(o.fecha)    Order by YEAR(o.fecha) ASC, MONTH(o.fecha) ASC, DAY(o.fecha) ASC</query>
	</named-query>


	<named-query name="Pedido.findPedido_MasAntiguo">
		<query>select distinct o.fecha    from Pedido o    Order by o.fecha ASC</query>
	</named-query>

	<!-- - - - - - - - - - - - - - - - - - - - - - - - -->
	<!-- - - - - - - - - - Producto - - - - - - - - - - -->
	<!-- - - - - - - - - - - - - - - - - - - - - - - - -->

	<named-query name="Producto.findAll">
		<query>select p from Producto p</query>
	</named-query>




	<!-- - - - - - - - - - - - - - - - - - - - - - - - -->
	<!-- - - - - - - - - - Almacenero - - - - - - - - - -->
	<!-- - - - - - - - - - - - - - - - - - - - - - - - -->

	<named-query name="Almacenero.findAll">
		<query>select a from Almacenero a</query>
	</named-query>


	<named-query name="Almacenero.findByLogin">
		<query>select a from Almacenero a where login = :login</query>
	</named-query>




	<!-- - - - - - - - - - - - - - - - - - - - - - - - -->
	<!-- - - - - - - - - - Cliente - - - - - - - - - -->
	<!-- - - - - - - - - - - - - - - - - - - - - - - - -->

	<named-query name="Cliente.findByLogIn">
		<query>select a from Cliente a where login = :login</query>
	</named-query>




	<!-- - - - - - - - - - - - - - - - - - - - - - - - -->
	<!-- - - - - - - - Orden de trabajo - - - - - - - - -->
	<!-- - - - - - - - - - - - - - - - - - - - - - - - -->

	<named-query name="OrdenTrabajo.findOrdenesTrabajoRetomar">
		<query>select o    from OrdenTrabajo o    where (o.estado = model.types.EstadoOrdenTrabajo.RECOGIDA and o.almaceneroRecoger = :almaceneroRecog)    or (o.estado = model.types.EstadoOrdenTrabajo.EMPAQUETADO and (o.almaceneroEmpaquetar is null or o.almaceneroEmpaquetar = :almaceneroEmpaq) and o.incidencias is empty)    order by o.id</query>
	</named-query>


	<named-query name="OrdenTrabajo.findNumProductosFaltaEmpaquetar">
		<query>select sum(p.unidadesProducto - p.unidadesEmpaquetadas) from ProductoEnOrdenTrabajo p where p.ordenTrabajo = :ordenTrabajo</query>
	</named-query>


	<named-query name="OrdenTrabajo.findNumOrdenTrabajoRecogidasDia_Almacenero">
		<query>select YEAR(o.fechaFinRecogida), MONTH(o.fechaFinRecogida), DAY(o.fechaFinRecogida), count(*) as num    from OrdenTrabajo o    where o.fechaFinRecogida is not null and o.almaceneroRecoger = :almacenero    Group by YEAR(o.fechaFinRecogida), MONTH(o.fechaFinRecogida), DAY(o.fechaFinRecogida)    Order by YEAR(o.fechaFinRecogida) ASC, MONTH(o.fechaFinRecogida) ASC, DAY(o.fechaFinRecogida) ASC</query>
	</named-query>


	<named-query name="OrdenTrabajo.findOrdenTrabajoTerminadaRecoger_MasAntigua">
		<query>select o.fechaFinRecogida    from OrdenTrabajo o    Order by o.fechaFinRecogida ASC</query>
	</named-query>




	<!-- - - - - - - - - - - - - - - - - - - - - - - - -->
	<!-- - - - - Producto en orden de trabajo - - - - - -->
	<!-- - - - - - - - - - - - - - - - - - - - - - - - -->

	<named-query name="ProductoEnOrdenTrabajo.findPendientesEmpaquetar">
		<query>select p from ProductoEnOrdenTrabajo p where p.unidadesProducto > p.unidadesEmpaquetadas and p.ordenTrabajo = :ordenTrabajo order by p.productoPedido.pedido.id ASC</query>
	</named-query>


	<named-query name="ProductoEnOrdenTrabajo.findPendientesEmpaquetarPedido">
		<query>select p from ProductoEnOrdenTrabajo p where p.unidadesProducto > p.unidadesEmpaquetadas and p.ordenTrabajo = :ordenTrabajo and p.productoPedido.pedido = :pedido order by p.productoPedido.pedido.id ASC</query>
	</named-query>




	<!-- - - - - - - - - - - - - - - - - - - - - - - - -->
	<!-- - - - - - - - - - Categorias - - - - - - - - - -->
	<!-- - - - - - - - - - - - - - - - - - - - - - - - -->

	<named-query name="Categoria.findAll">
		<query>select p from Categoria p</query>
	</named-query>


	<named-query name="Categoria.findCategoriasPadre">
		<query>select p from Categoria p where p.categoriaPadre = null</query>
	</named-query>




	<!-- - - - - - - - - - - - - - - - - - - - - - - - -->
	<!-- - - - - - - - PosicionesProducto - - - - - - - -->
	<!-- - - - - - - - - - - - - - - - - - - - - - - - -->

	<named-query name="PosicionProducto.findAll">
		<query>select p from PosicionProducto p</query>
	</named-query>




	<!-- - - - - - - - - - - - - - - - - - - - - - - - -->
	<!-- - - - - - - - - - Paquete - - - - - - - - - - -->
	<!-- - - - - - - - - - - - - - - - - - - - - - - - -->

	<named-query name="Paquete.findUltimoNumCaja">
		<query>select p.numCaja from Paquete p where p.ordenTrabajo = :ordenTrabajo order by p.numCaja DESC</query>
	</named-query>


	<named-query name="Paquete.findNoAsociadosEnvio">
		<query>select p from Paquete p where p.envio is null and p.estado = model.types.EstadoPaquete.CERRADO Order by p.id ASC</query>
	</named-query>
	
	
	<named-query name="OrdenTrabajo.findNumOrdenTrabajoEmpaquetadaDia_Almacenero">
		<query>select YEAR(o.fechaFinEmpaquetado), MONTH(o.fechaFinEmpaquetado), DAY(o.fechaFinEmpaquetado), count(*) as num    from OrdenTrabajo o    where o.fechaFinEmpaquetado is not null and o.almaceneroRecoger = :almacenero    Group by YEAR(o.fechaFinEmpaquetado), MONTH(o.fechaFinEmpaquetado), DAY(o.fechaFinEmpaquetado)    Order by YEAR(o.fechaFinEmpaquetado) ASC, MONTH(o.fechaFinEmpaquetado) ASC, DAY(o.fechaFinEmpaquetado) ASC</query>
	</named-query>


	<named-query name="OrdenTrabajo.findOrdenTrabajoEmpaquetada_MasAntigua">
		<query>select o.fechaFinEmpaquetado    from OrdenTrabajo o    Order by o.fechaFinEmpaquetado ASC</query>
	</named-query>



	<!-- - - - - - - - - - - - - - - - - - - - - - - - -->
	<!-- - - - - - - - - Transportista - - - - - - - - -->
	<!-- - - - - - - - - - - - - - - - - - - - - - - - -->

	<named-query name="Transportista.findAll">
		<query>select t from Transportista t Order by t.nombre ASC</query>
	</named-query>


</entity-mappings>