<?xml version="1.0" encoding="UTF-8"?>
<entity-mappings xmlns="http://java.sun.com/xml/ns/persistence/orm"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/persistence/orm http://java.sun.com/xml/ns/persistence/orm_2_0.xsd"
	version="2.0">



	<!-- - - - - - - - - - - - - - - - - - - - - - - - -->
	<!-- - - - - - - - - - - Pedido - - - - - - - - - - -->
	<!-- - - - - - - - - - - - - - - - - - - - - - - - -->

	<named-query name="Pedido.findAll">
		<query>select p from Pedido p</query>
	</named-query>

	<named-query name="Pedido.findPosibleRecoger">
		<query>select p from Pedido p where p.pagado = model.types.PedidoPagado.SI and p.estado = model.types.EstadoPedido.POSIBLE_ASOCIAR_OT order by p.fecha ASC</query>
	</named-query>

	<named-query name="Pedido.findPosibleRecoger_NoPedido">
		<query>select p from Pedido p where p != :pedido and p.pagado = model.types.PedidoPagado.SI and p.estado = model.types.EstadoPedido.POSIBLE_ASOCIAR_OT order by p.fecha ASC</query>
	</named-query>

	<named-query name="Pedido.findPosibleEmpaquetar">
		<query>select distinct p.productoPedido.pedido from ProductoEnOrdenTrabajo p where p.ordenTrabajo = :ordenTrabajo and p.unidadesProducto > p.unidadesEmpaquetadas</query>
	</named-query>
	
	<named-query name="Pedido.findNumProductosPosibleEmpaquetar">
		<query>select sum(p.unidadesProducto - p.unidadesEmpaquetadas) from ProductoEnOrdenTrabajo p where p.ordenTrabajo = :ordenTrabajo and p.productoPedido.pedido = :pedido and p.unidadesProducto > p.unidadesEmpaquetadas</query>
	</named-query>
	
	<named-query name="Pedido.findNoPagados">
		<query>select p from Pedido p where p.pagado = model.types.PedidoPagado.NO</query>
	</named-query>



	<!-- - - - - - - - - - - - - - - - - - - - - - - - -->
	<!-- - - - - - - - - - Producto - - - - - - - - - - -->
	<!-- - - - - - - - - - - - - - - - - - - - - - - - -->

	<named-query name="Producto.findAll">
		<query>select p from Producto p</query>
	</named-query>



	<!-- - - - - - - - - - - - - - - - - - - - - - - - -->
	<!-- - - - - - - - - - Almacenero - - - - - - - - - -->
	<!-- - - - - - - - - - - - - - - - - - - - - - - - -->

	<named-query name="Almacenero.findByLogin">
		<query>select a from Almacenero a where login = :login</query>
	</named-query>



	<!-- - - - - - - - - - - - - - - - - - - - - - - - -->
	<!-- - - - - - - - - - Cliente - - - - - - - - - -->
	<!-- - - - - - - - - - - - - - - - - - - - - - - - -->

	<named-query name="Cliente.findByName">
		<query>select a from Cliente a where nombre = :nombre</query>
	</named-query>



	<!-- - - - - - - - Orden de trabajo - - - - - - - - -->
	<!-- - - - - - - - - - - - - - - - - - - - - - - - -->

	<named-query name="OrdenTrabajo.findOrdenesTrabajoEmpaquetarAlmacenero">
		<query>select o from OrdenTrabajo o where o.estado = model.types.EstadoOrdenTrabajo.EMPAQUETADO and o.almaceneroEmpaquetar is null or o.almaceneroEmpaquetar = :almacenero and o.incidencias is empty order by o.id</query>
	</named-query>

	<named-query name="OrdenTrabajo.findNumPedidosFaltaEmpaquetar">
		<query>select count(distinct p.productoPedido.pedido) from ProductoEnOrdenTrabajo p where p.unidadesProducto > p.unidadesEmpaquetadas and p.ordenTrabajo = :ordenTrabajo</query>
	</named-query>

	<named-query name="OrdenTrabajo.findNumProductosFaltaEmpaquetar">
		<query>select sum(p.unidadesProducto - p.unidadesEmpaquetadas) from ProductoEnOrdenTrabajo p where p.ordenTrabajo = :ordenTrabajo</query>
	</named-query>



	<!-- - - - - - - - - - - - - - - - - - - - - - - - -->
	<!-- - - - - Producto en orden de trabajo - - - - - -->
	<!-- - - - - - - - - - - - - - - - - - - - - - - - -->

	<named-query name="ProductoEnOrdenTrabajo.findPendientesEmpaquetar">
		<query>select p from ProductoEnOrdenTrabajo p where p.unidadesProducto > p.unidadesEmpaquetadas and p.ordenTrabajo = :ordenTrabajo order by p.productoPedido.pedido.id ASC</query>
	</named-query>

	<named-query name="ProductoEnOrdenTrabajo.findPendientesEmpaquetarPedido">
		<query>select p from ProductoEnOrdenTrabajo p where p.unidadesProducto > p.unidadesEmpaquetadas and p.ordenTrabajo = :ordenTrabajo and p.productoPedido.pedido = :pedido order by p.productoPedido.pedido.id ASC</query>
	</named-query>



	<!-- - - - - - - - - - - - - - - - - - - - - - - - -->
	<!-- - - - - - - - - - Categorias - - - - - - - - - -->
	<!-- - - - - - - - - - - - - - - - - - - - - - - - -->

	<named-query name="Categoria.findAll">
		<query>select p from Categoria p</query>
	</named-query>

	<named-query name="Categoria.findCategoriasPadre">
		<query>select p from Categoria p where p.categoriaPadre = null</query>
	</named-query>



	<!-- - - - - - - - - - - - - - - - - - - - - - - - -->
	<!-- - - - - - - - PosicionesProducto - - - - - - - -->
	<!-- - - - - - - - - - - - - - - - - - - - - - - - -->

	<named-query name="PosicionProducto.findAll">
		<query>select p from PosicionProducto p</query>
	</named-query>
	
	
	
	<!-- - - - - - - - - - - - - - - - - - - - - - - - -->
	<!-- - - - - - - - - - Paquete - - - - - - - - - - -->
	<!-- - - - - - - - - - - - - - - - - - - - - - - - -->
	
	<named-query name="Paquete.findUltimoNumCaja">
		<query>select p.numCaja from Paquete p where p.ordenTrabajo = :ordenTrabajo order by p.numCaja DESC</query>
	</named-query>


</entity-mappings>